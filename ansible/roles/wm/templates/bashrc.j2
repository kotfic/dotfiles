# ~/.bashrc: executed by bash(1) for non-login shells.
# see /usr/share/doc/bash/examples/startup-files (in the package bash-doc)
# for examples

if [ -d "$HOME/bin"  ] ; then
    export PATH=$HOME/bin:$PATH
fi

if [ -d "{{base_dir}}/bin"  ] ; then
    export PATH={{ base_dir }}/bin:$PATH
fi

# Add locally installed packages
if [ -d "$HOME/.local/bin"  ] ; then
    export PATH=$HOME/.local/bin:$PATH
fi

# add work spark directory
if [ -d "/opt/spark" ] ; then
    export SPARK_HOME=/opt/spark
    export PATH=$PATH:$SPARK_HOME/bin
fi


# If not running interactively, don't do anything
[ -z "$PS1" ] && return

# don't put duplicate lines in the history. See bash(1) for more options
# don't overwrite GNU Midnight Commander's setting of `ignorespace'.
export HISTCONTROL=$HISTCONTROL${HISTCONTROL+,}ignoredups
# ... or force ignoredups and ignorespace
export HISTCONTROL=ignoreboth

# append to the history file, don't overwrite it
shopt -s histappend

# for setting history length see HISTSIZE and HISTFILESIZE in bash(1)

# check the window size after each command and, if necessary,
# update the values of LINES and COLUMNS.
shopt -s checkwinsize

# make less more friendly for non-text input files, see lesspipe(1)
[ -x /usr/bin/lesspipe ] && eval "$(SHELL=/bin/sh lesspipe)"

# set variable identifying the chroot you work in (used in the prompt below)
if [ -z "$debian_chroot" ] && [ -r /etc/debian_chroot ]; then
    debian_chroot=$(cat /etc/debian_chroot)
fi

# set a fancy prompt (non-color, unless we know we "want" color)
case "$TERM" in
    xterm-color) color_prompt=yes;;
esac

# uncomment for a colored prompt, if the terminal has the capability; turned
# off by default to not distract the user: the focus in a terminal window
# should be on the output of commands, not on the prompt
force_color_prompt=yes

if [ -n "$force_color_prompt" ]; then
    if [ -x /usr/bin/tput ] && tput setaf 1 >&/dev/null; then
        # We have color support; assume it's compliant with Ecma-48
        # (ISO/IEC-6429). (Lack of such support is extremely rare, and such
        # a case would tend to support setf rather than setaf.)
        color_prompt=yes
    else
        color_prompt=
    fi
fi

if [ "$color_prompt" = yes ]; then
    PS1='${debian_chroot:+($debian_chroot)}\[\033[01;32m\]\u@\h\[\033[00m\]:\[\033[01;34m\]\w\[\033[00m\]\$ '
else
    PS1='${debian_chroot:+($debian_chroot)}\u@\h:\w\$ '
fi
unset color_prompt force_color_prompt

# If this is an xterm set the title to user@host:dir
case "$TERM" in
xterm*|rxvt*)
    PS1="\[\e]0;${debian_chroot:+($debian_chroot)}\u@\h: \w\a\]$PS1"
    ;;
*)
    ;;
esac

# Alias definitions.
# You may want to put all your additions into a separate file like
# ~/.bash_aliases, instead of adding them here directly.
# See /usr/share/doc/bash-doc/examples in the bash-doc package.

#if [ -f ~/.bash_aliases ]; then
#    . ~/.bash_aliases
#fi

# enable color support of ls and also add handy aliases
if [ -x /usr/bin/dircolors ]; then
    eval "`dircolors -b`"
    alias ls='ls --color=auto'
    #alias dir='dir --color=auto'
    #alias vdir='vdir --color=auto'

    #alias grep='grep --color=auto'
    #alias fgrep='fgrep --color=auto'
    #alias egrep='egrep --color=auto'
fi

# some more ls aliases
#alias ll='ls -l'
#alias la='ls -A'
#alias l='ls -CF'

# enable programmable completion features (you don't need to enable
# this, if it's already enabled in /etc/bash.bashrc and /etc/profile
# sources /etc/bash.bashrc).
if [ -f /etc/bash_completion ]; then
    . /etc/bash_completion
fi
[[ -s "$HOME/.rvm/scripts/rvm" ]] && source "$HOME/.rvm/scripts/rvm" # Load RVM into a shell session *as a function*


export TERM=xterm-256color


export LC_CTYPE=en_US.UTF-8

export EDITOR="emacsclient -c"
export ALTERNATE_EDITOR="emacsclient -c"

alias e='emacsclient -c'


export JAVA_HOME=/usr/lib/jvm/default/


export PYTHONDONTWRITEBYTECODE=1

# Virtualenv wrapper

if [ -f $VIRTUALENV_WRAPPER_SCRIPT ]; then
    export WORKON_HOME=~/.venvs
    export VIRTUALENVWRAPPER_PYTHON=/usr/bin/python2
    export VIRTUALENVWRAPPER_LOG_DIR=$WORKON_HOME
    export VIRTUALENVWRAPPER_VIRTUALENV_ARGS='--no-site-packages -p /usr/bin/python2'
    export VIRTUALENV_WRAPPER_SCRIPT=/usr/bin/virtualenvwrapper.sh

    source $VIRTUALENV_WRAPPER_SCRIPT
fi

# TODO This should be set up with virtualenv-wrapper projects
NEX_WORKING_DIR=~/kitware/projects/NEX/src/girder/girder

if [ -d  $NEX_WORKING_DIR ]; then
    alias nex='workon NEX && cd $NEX_WORKING_DIR'
fi


# Add VTK compiled libraries if folder exists
VTK_PYTHON_LIB=/home/kotfic/kitware/projects/src/VTK/build/Wrapping/Python
if [ -d $VTK_PYTHON_LIB ]; then
    export PYTHONPATH=$VTK_PYTHON_LIB:$PYTHONPATH
fi
# Add VTK compiled libraries if folder exists
VTK_LIB=/home/kotfic/kitware/projects/src/VTK/build/lib
if [ -d $VTK_LIB ]; then
    export PYTHONPATH=$VTK_LIB:$PYTHONPATH
fi


# Add nex aws bin to PATH
NEX_AWS_BIN=/home/kotfic/kitware/projects/NEX/aws/bin
if [ -d $NEX_AWS_BIN ]; then
    export PATH=$NEX_AWS_BIN:$PATH
fi
